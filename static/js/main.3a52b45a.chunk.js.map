{"version":3,"sources":["index.js"],"names":["UserForm","onSubmit","e","target","value","fetch","then","response","json","data","message","console","error","ReactDOM","render","App","document","getElementById","catch","preventDefault","type","defaultValue","useState","expandedRows","setExpandedRows","expandState","setExpandState","sm","responsive","variant","strengths","map","skill","onClick","event","userId","currentExpandedRows","isRowExpanded","includes","obj","newExpandedRows","filter","id","concat","handleEpandRow","colSpan","style","backgroundColor","color","padding","UUID","v4","weight","media","description","className","alt","src","mediaItems","address"],"mappings":"qQAYMA,EAAW,WAuBb,OACI,uBAAMC,SAtBW,SAACC,GAClB,GAA0B,KAAtBA,EAAEC,OAAO,GAAGC,MAEZ,OAAO,EAEXC,MAAM,iCAAD,OAAmCH,EAAEC,OAAO,GAAGC,QACnDE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAM,SAAAG,GACH,GAAoB,sBAAjBA,EAAKC,QAGJ,OADAC,QAAQC,MAAMH,EAAKC,QAAU,iCACtB,EAEXG,IAASC,OAAO,cAACC,EAAD,eAASN,IAAUO,SAASC,eAAe,YAE9DC,OAAM,SAAAN,GACHD,QAAQC,MAAM,sBAAuBA,MAEzCV,EAAEiB,kBAIF,UACE,+CAEE,uBAAOC,KAAK,OAAOC,aAAa,kBAElC,uBAAOD,KAAK,SAAShB,MAAM,uBAKrCS,IAASC,OAAO,cAAEd,EAAF,IAAgBgB,SAASC,eAAe,SAGxD,IAAMF,EAAM,SAACN,GAET,MAAwCa,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAEA,EAAsCF,mBAAS,IAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KAkBA,OACI,cAAC,IAAD,UACA,cAAC,IAAD,UACA,cAAC,IAAD,CAAKC,GAAI,GAAT,SACA,eAAC,IAAD,CAAOC,YAAU,EAACC,QAAQ,OAA1B,UACI,gCACI,+BACA,4CACA,6CACA,mDAGJ,gCAEApB,EAAKqB,UAAUC,KAAI,SAACC,GAAD,OACnB,qCACI,+BACI,6BACCA,EAAK,OAEN,6BACCA,EAAK,cAIN,6BACA,cAAC,IAAD,CAEIH,QAAQ,OACRI,QAAS,SAAAC,GAAK,OA5CX,SAACA,EAAOC,GAC3B,IAAMC,EAAsBb,EACtBc,EAAgBD,EAAoBE,SAASH,GAE/CI,EAAM,GACOA,EAAIJ,IAArBE,EACAX,EAAea,GAGf,IAAMC,EAAkBH,EACpBD,EAAoBK,QAAO,SAAAC,GAAE,OAAIA,IAAOP,KACxCC,EAAoBO,OAAOR,GAC/BX,EAAgBgB,GAgCkBI,CAAeV,EAAOF,EAAMU,KAHlD,SAKQjB,EAAYO,EAAMU,IAClB,OAAS,aAhBZV,EAAMU,IAqBf,mCAEAnB,EAAae,SAASN,EAAMU,IAC5B,6BACI,oBAAIG,QAAQ,IAAZ,SACA,sBAAKC,MAAO,CAACC,gBAAiB,UAAWC,MAAO,OAAQC,QAAS,QAAjE,UACI,iDACA,+BACI,+BACI,+BAAM,mDADV,IAC0C,IACtC,qCAASjB,EAAK,gBAAd,SAFKkB,IAAKC,MAId,+BACI,+BAAM,0CADV,IACiC,IAC7B,qCAASnB,EAAMoB,OAAf,SAFKF,IAAKC,MAIbnB,EAAMqB,MAAM,IAAM,+BACf,+BAAM,yCADS,IACa,IAC5B,qCAASrB,EAAMqB,MAAM,GAAGC,YAAxB,OACA,qBAAKC,UAAU,SAASC,IAAKxB,EAAMqB,MAAM,GAAGC,YAAaG,IAAKzB,EAAMqB,MAAM,GAAGK,WAAW,GAAGC,YAHnET,IAAKC,eAbpCD,IAAKC,MAqBN,0B","file":"static/js/main.3a52b45a.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport ReactDOM from \"react-dom\";\r\nimport {default as UUID} from \"node-uuid\";\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\n\r\nconst UserForm = () => {\r\n\r\n    const handleSubmit = (e) => {\r\n        if (e.target[0].value === '')\r\n        {\r\n            return false;\r\n        }\r\n        fetch(`https://bio.torre.co/api/bios/${ e.target[0].value }`)\r\n        .then(response => response.json())\r\n        .then( data => { \r\n            if(data.message === 'Person not found!') \r\n            {\r\n                console.error(data.message + ' try with another user name.');\r\n                return false;\r\n            }\r\n            ReactDOM.render(<App {...data} />, document.getElementById('root'));\r\n        })\r\n        .catch(error =>{\r\n            console.error('There was an error!', error);\r\n        });;\r\n        e.preventDefault();\r\n    }\r\n \r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n          <label>\r\n            User Name:\r\n            <input type=\"text\" defaultValue=\"torrenegra\" />\r\n          </label>\r\n          <input type=\"submit\" value=\"Display Skills\"  />\r\n        </form>\r\n      );\r\n}\r\n\r\nReactDOM.render(< UserForm /> , document.getElementById('root'));\r\n\r\n\r\nconst App = (data) => {\r\n  \r\n    const [expandedRows, setExpandedRows] = useState([]);\r\n\r\n    const [expandState, setExpandState] = useState({});\r\n\r\n\r\n    const handleEpandRow = (event, userId) => {\r\n        const currentExpandedRows = expandedRows;\r\n        const isRowExpanded = currentExpandedRows.includes(userId);\r\n\r\n        let obj = {};\r\n        isRowExpanded ? (obj[userId] = false) :  (obj[userId] = true);\r\n        setExpandState(obj);\r\n\r\n\r\n        const newExpandedRows = isRowExpanded ?\r\n            currentExpandedRows.filter(id => id !== userId) :\r\n            currentExpandedRows.concat(userId);\r\n        setExpandedRows(newExpandedRows);\r\n    }\r\n    \r\n    return(\r\n        <Container>\r\n        <Row>\r\n        <Col sm={12}>\r\n        <Table responsive variant=\"dark\">\r\n            <thead>\r\n                <tr>\r\n                <th>Skill Name</th>\r\n                <th>Proficiency</th>\r\n                <th>More Details</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n            {\r\n            data.strengths.map((skill) =>\r\n            <>\r\n                <tr key={skill.id}>\r\n                    <td>\r\n                    {skill['name']}\r\n                    </td>\r\n                    <td>\r\n                    {skill['proficiency']}\r\n                    </td>\r\n                  \r\n                \r\n                    <td>\r\n                    <Button\r\n                        \r\n                        variant=\"link\"\r\n                        onClick={event => handleEpandRow(event, skill.id)}>\r\n                        {\r\n                            expandState[skill.id] ?\r\n                            'Hide' : 'Show'\r\n                        }\r\n                    </Button>\r\n                    </td>\r\n                </tr>\r\n                <>\r\n                {\r\n                expandedRows.includes(skill.id) ?\r\n                <tr key={UUID.v4()}>\r\n                    <td colSpan=\"6\">\r\n                    <div style={{backgroundColor: '#343A40', color: '#FFF', padding: '10px'}}>\r\n                        <h2> Skill Details </h2>\r\n                        <ul>\r\n                            <li key={UUID.v4()}>\r\n                                <span><b>Recommendations:</b></span> {' '}\r\n                                <span> { skill['recommendations'] } </span>\r\n                            </li>\r\n                            <li key={UUID.v4()}>\r\n                                <span><b>Weight:</b></span> {' '}\r\n                                <span> { skill.weight } </span>\r\n                            </li>\r\n                            {skill.media[0] && <li key={UUID.v4()}>\r\n                                <span><b>Media:</b></span> {' '}\r\n                                <span> { skill.media[0].description } </span>\r\n                                <img className='fitImg' alt={skill.media[0].description} src={skill.media[0].mediaItems[0].address} />\r\n                            </li>}\r\n                        </ul>\r\n                    </div>\r\n                    </td>\r\n                </tr> : null\r\n                }\r\n                </>\r\n            </> \r\n            )}\r\n            </tbody>\r\n        </Table>\r\n        </Col>\r\n        </Row>\r\n        </Container>\r\n    );\r\n    \r\n}\r\n\r\n\r\n\r\n"],"sourceRoot":""}